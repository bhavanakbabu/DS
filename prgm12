 bfs


#include<stdio.h>
#define max 25
int queue[max];
int front=-1;
int rear=-1;
int data,item;
int graph[5][5]={{0,1,1,0,0},{1,0,0,1,1},{1,0,0,1,0},{0,1,1,0,1},{0,1,0,1,0}};
//visit array'0'
int visit[5]={0,0,0,0,0};
int choice;

void enqueue(int data)
{
	if(rear==max-1)
	{	
		printf("the queue is full.\n");
	}
	else	
	{
		if((rear==-1)&&(front==-1))
		{
			front=front+1;
			rear=rear+1;
		}
		else
		{
			rear=rear+1;
		}
		queue[rear]=data;
	}
}
int dequeue()
{
	if(front==-1)
	{
		printf("queue is empty\n");
	}
	else
	{
		data=queue[front];
		if(front==rear)
		{
			front=-1;
			rear=-1;
		}
		else
		{
			front=front+1;
		}
		
	}
	return(item);
}
void display()
{
	int i,j;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			printf("%d ",graph[i][j]);
		}
		printf("\n");
	}
}
int isvisited(int vtx)
{
	return(visit[vtx]);
}
void bfs(int s)
{
	int i,vtx;
	enqueue(s);
	while((front!=-1)&&(rear!=-1))
	{
		vtx=dequeue();
		if(!isvisited(vtx))
		{
			visit[vtx]=1;
			printf("%d",vtx);
			for(i=0;i<5;i++)
			{
				if(graph[vtx] [i]==1)
					enqueue(i);
			}
			
		}
	}
}
int main()
{ 
	display();
	bfs(0);
}
